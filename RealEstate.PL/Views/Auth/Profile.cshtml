@model RealEstate.PL.ViewModels.Auth.ApplicationUserViewModel

@{
    ViewData["Title"] = "User Profile";
    Layout = "_LogedUser";
}

<!-- Main Container -->
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <!-- Card Component -->
            <div class="card border-0 shadow-lg rounded">
                <div class="card-body p-4">
                    <!-- Profile Header -->
                    <div class="text-center mb-4 bg-light text-dark py-3 px-4 rounded">
                        <h2 class="fw-bold text-dark mb-2">
                            <i class="bi bi-person-circle me-2"></i> @ViewData["Title"]
                        </h2>
                        <p class="text-muted">View and manage your profile details below.</p>
                    </div>

                    <!-- Profile Content -->
                    <div class="row">
                        <!-- Avatar and Basic Info -->
                        <div class="col-md-4 text-center mb-4 mb-md-0">
                            <div class="d-flex justify-content-center mb-3">
                                <span class="display-1 text-primary">
                                    <i class="bi bi-person-circle"></i>
                                </span>
                            </div>
                            <h4 class="text-dark mb-1">@Model.UserName</h4>
                        </div>

                        <!-- User Information -->
                        <div class="col-md-8">
                            <div class="mb-4">
                                <h5 class="text-dark mb-3">
                                    <i class="bi bi-info-circle me-2"></i> User Information
                                </h5>
                                <div class="mb-3">
                                    <label class="form-label">Full Name</label>
                                    <input type="text" class="form-control" value="@Model.UserName" readonly>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Email Address</label>
                                    <input type="text" class="form-control" value="@Model.Email" readonly>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Phone Number</label>
                                    <input type="text" class="form-control" value="@Model.PhoneNumber" readonly>
                                </div>

                                <!-- Roles Section -->
                                <div class="mb-4">
                                    <h5 class="text-dark mb-3">
                                        <i class="bi bi-shield-check me-2"></i> Roles
                                    </h5>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var role in Model.Roles)
                                        {
                                            <span class="badge bg-primary text-light role-badge">
                                                <i class="bi bi-shield me-1"></i> @role
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Button -->
                    <div class="text-center mb-4 bg-light text-dark py-3 px-4 rounded">
                        <a asp-action="EditProfile" class="btn btn-outline-primary btn-lg">
                            <i class="bi bi-pencil me-2"></i> Edit Profile
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Optional CSS Styles -->
<style>
    .display-1 {
        font-size: 4rem;
    }

    .text-primary {
        color: #007bff;
    }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }

    .badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .badge:hover {
            background-color: #0056b3;
            color: #fff;
        }

    .text-muted {
        color: #6c757d;
    }

    .form-control[readonly] {
        background-color: #f8f9fa;
        cursor: not-allowed;
    }

    .role-badge {
        font-size: 0.9rem;
    }
</style>

<!-- JavaScript to handle modal functionality -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var rolePermissionsModal = document.getElementById('rolePermissionsModal');
        var rolePermissionsTitle = document.getElementById('rolePermissionsTitle');
        var rolePermissionsList = document.getElementById('rolePermissionsList');

        rolePermissionsModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var role = button.getAttribute('data-role'); // Extract info from data-* attributes

            // Fetch permissions for the role (for demo purposes, we use static data)
            var permissions = getPermissionsForRole(role);

            // Update the modal's content
            rolePermissionsTitle.textContent = role + ' Permissions';
            rolePermissionsList.innerHTML = permissions.map(function (perm) {
                return `<li><i class="bi bi-check-circle me-2 text-success"></i> ${perm}</li>`;
            }).join('');
        });

        // Dummy function to get permissions based on the role
        function getPermissionsForRole(role) {
            // Replace this with actual logic to fetch permissions
            var permissionsMap = {
                'Admin': ['Manage Users', 'View Reports', 'Edit Settings'],
                'User': ['View Profile', 'Edit Profile'],
                'Moderator': ['Manage Content', 'View Analytics']
            };
            return permissionsMap[role] || [];
        }
    });
</script>
